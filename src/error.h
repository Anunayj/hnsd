#ifndef _HSK_ERRORS_H
#define _HSK_ERRORS_H

// Generic
#define HSK_SUCCESS 0
#define HSK_EOK 0
#define HSK_ENOMEM 1
#define HSK_ETIMEOUT 2
#define HSK_EFAILURE 3
#define HSK_EBADARGS 4
#define HSK_EENCODING 5

// Proofs
#define HSK_EPROOFOK 0
#define HSK_EHASHMISMATCH 6
#define HSK_EMALFORMEDNODE 7
#define HSK_EINVALIDNODE 8
#define HSK_EEARLYEND 9
#define HSK_ENORESULT 10
#define HSK_EUNKNOWNERROR 11
#define HSK_EUNEXPECTEDNODE 12
#define HSK_ERECORDMISMATCH 13

// Cuckoo
#define HSK_EPOWOK 0
#define HSK_EPOWPROOFSIZE 14
#define HSK_EPOWTOOBIG 15
#define HSK_EPOWTOOSMALL 16
#define HSK_EPOWNONMATCHING 17
#define HSK_EPOWBRANCH 18
#define HSK_EPOWDEADEND 19
#define HSK_EPOWSHORTCYCLE 20

// POW
#define HSK_ENEGTARGET 21
#define HSK_EHIGHHASH 22

// Chain
#define HSK_ETIMETOONEW 23
#define HSK_EDUPLICATE 24
#define HSK_EDUPLICATEORPHAN 25
#define HSK_ETIMETOOOLD 26
#define HSK_EBADDIFFBITS 27
#define HSK_EORPHAN 28

// Brontide
#define HSK_EACTONE 29
#define HSK_EACTTWO 30
#define HSK_EACTTHREE 31
#define HSK_EBADSIZE 32
#define HSK_EBADTAG 33

// Max
#define HSK_MAXERROR 33

const char *
hsk_strerror(int code);

#endif
